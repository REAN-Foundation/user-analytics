meta {
  name: Create
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/users
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{USER_JWT}}
  x-api-key: 
}

body:json {
  {
      "id": "{{USER_ID}}",
      "TenantId": "{{TENANT_ID}}",
      "FirstName": "Kiran",
      "LastName": "Kharade",
      "Gender": "Male",
      "Email": "kiran.kharade@inflectionzone.com",
      "PhoneCode": "+91",
      "Phone": "9900990099",
      "LocationLongitude": "28.7041",
      "LocationLatitude": "77.1025",
      "LastActive": "2023-11-10T13:41:49.985Z",
      "OnboardingSource": "Patient App",
      "Role": "Patient",
      "Attributes": {
          "sample_attribute": 3232
      },
      "TimezoneOffsetMin": 330,
      "RegistrationDate": "2023-11-17T13:41:49.985Z"
  }
}

tests {
  try {
      var jsonRes = res.getBody();
      bru.setEnvVar("USER_ID", jsonRes.Data.Tenant.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('Success');
  });
  
  test("User is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('FirstName');
      expect(jsonRes.Data).to.have.property('LastName');
      expect(jsonRes.Data).to.have.property('Phone');
      expect(jsonRes.Data).to.have.property('Email');
      
  });
  
  
}
