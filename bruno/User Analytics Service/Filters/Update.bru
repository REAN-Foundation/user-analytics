meta {
  name: Update
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/filters/{{FILTER_ID}}
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{USER_JWT}}
}

body:json {
  {
      "Name": "filter-z",
      "Description": "This is a filter to find user engagement of users beyond 10 days.",
      "Filters": {
          "sample_attribute_1": 3333,
          "sample_attribute_2": "dfdsfds"
      },
      "AnalysisType": "Active-users"
  }
  
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('Success');
  });
  
  test("Filter is updated", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('Name');
      expect(jsonRes.Data).to.have.property('Description');
      expect(jsonRes.Data).to.have.property('OwnerId');
      expect(jsonRes.Data).to.have.property('UserId');
      expect(jsonRes.Data).to.have.property('TenantId');
      expect(jsonRes.Data).to.have.property('Filters');
  });
  
}
