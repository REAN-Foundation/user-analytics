meta {
  name: Create
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/cohorts
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{USER_JWT}}
}

body:json {
  {
      "OwnerId": "a84e09b6-339a-4340-a9bd-9567a17200ef",
      "TenantId": "{{TENANT_ID}}",
      "Name": "my-cohort",
      "Description": "This is a cohort segmented by my-filter.",
      "Attributes": {
          "sample_attribute": 3232
      }
  }
}

tests {
  try {
      var jsonRes = res.getBody();
      bru.setEnvVar("COHORT_ID", jsonRes.Data.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('Success');
  });
  
  test("Cohort is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('id');
      expect(jsonRes.Data).to.have.property('TenantId');
      expect(jsonRes.Data).to.have.property('Name');
      expect(jsonRes.Data).to.have.property('Description');
      expect(jsonRes.Data).to.have.property('Attributes');
      
  });
  
  
}
